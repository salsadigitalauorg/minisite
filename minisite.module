<?php

/**
 * @file
 * Main functions of the Minisite module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\file\FileInterface;
use Drupal\minisite\Exception\ArchiveException;
use Drupal\minisite\Minisite;

require_once dirname(__FILE__) . '/minisite.theme.inc';

/**
 * Implements hook_help().
 */
function minisite_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.minisite':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Upload and serve arbitrary "minisites" archives from a Drupal website.') . '</p>';

      return $output;
  }
}

/**
 * Validation callback.
 *
 * @param \Drupal\file\FileInterface $file
 *   The file to validate.
 * @param string $content_extensions
 *   String list of the allowed archive content extensions.
 *
 * @return array
 *   Array of errors, if any.
 */
function minisite_validate_archive(FileInterface $file, $content_extensions) {
  $errors = [];

  try {
    Minisite::validateArchive($file, $content_extensions);
  }
  catch (ArchiveException $exception) {
    $errors[] = $exception->getMessage();
  }
  catch (\Exception $exception) {
    $errors[] = t('Unable to use uploaded file as a Minisite');
  }

  return $errors;
}
